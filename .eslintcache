[{"C:\\Users\\andre\\projects\\fees-calc\\src\\App.js":"1","C:\\Users\\andre\\projects\\fees-calc\\src\\index.js":"2","C:\\Users\\andre\\projects\\fees-calc\\src\\BuySellCard.js":"3","C:\\Users\\andre\\projects\\fees-calc\\src\\reportWebVitals.js":"4","C:\\Users\\andre\\projects\\fees-calc\\src\\Header.js":"5"},{"size":4004,"mtime":1609149176390,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1608902171874,"results":"8","hashOfConfig":"7"},{"size":4760,"mtime":1609150092234,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1608902171874,"results":"10","hashOfConfig":"7"},{"size":515,"mtime":1609149959186,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"19hvmqg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\andre\\projects\\fees-calc\\src\\App.js",["23"],"import React from 'react';\nimport './App.css';\nimport { Button, Grid, ListItem, ListItemIcon, ListItemText, Paper, Step, Stepper, StepLabel, StepContent, Typography } from '@material-ui/core';\nimport { Business, MenuBook } from '@material-ui/icons';\nimport BuySellCard from './BuySellCard';\nimport Header from './Header';\n\nfunction App() {\n\n  const [x, setX] = React.useState(0);\n  const [y, setY] = React.useState(0);\n  const [lots, setLots] = React.useState(0);\n\n  const stepsContent = [\n    {\n      val: x,\n      type: 'Bought',\n      setTotal: setX\n    },\n    {\n      val: y,\n      type: 'Sold',\n      setTotal: setY\n    }\n  ];\n\n  function getSteps() {\n    return ['Enter buying information', 'Enter selling information', 'Confirm information'];\n  }\n  \n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return ``;\n      case 1:\n        return '';\n      case 2:\n        return ``;\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setX(0);\n    setY(0);\n    setLots(0);\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={false} sm={2}/>\n      <Grid item container xs={12} sm={8} justify=\"center\">\n        <Grid item xs={12}>\n          <Header />\n          <Stepper activeStep={activeStep} orientation=\"vertical\">\n            {steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n                <StepContent>\n                  <Typography>{getStepContent(index)}</Typography>\n                  {\n                    index < 2 ? <BuySellCard type={stepsContent[index].type} lots={lots} setLots={setLots} setTotal={stepsContent[index].setTotal}/>\n                    : null\n                  }\n                  {\n                    index > 1 ?\n                    <Paper variant=\"outlined\" style={{ textAlign: 'justify', marginTop: '15px', padding: '15px' }}>\n                      <ListItem>\n                        <ListItemIcon>\n                          <MenuBook />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Summary\" secondary=\"Transactions\"/>\n                      </ListItem>\n                      <Typography>Bought {lots} lots at RM {stepsContent[0].val.toFixed(2)}</Typography>\n                      <Typography>Sold {lots} lots at RM {stepsContent[1].val.toFixed(2)}</Typography>\n                    </Paper> : null\n                  }\n                  <div style={{ marginTop: '15px' }}>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      disabled={(index < 2) && stepsContent[index].val <= 0}\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={handleNext}\n                    >\n                      {activeStep === steps.length - 1 ? 'Calculate' : 'Next'}\n                    </Button>\n                  </div>\n                </StepContent>\n              </Step>\n            ))}\n            {activeStep === steps.length && (\n              <Paper variant=\"outlined\" color=\"primary\" square elevation={0} style={{ display: 'block', padding: '15px', marginTop: '15px' }}>\n                <Typography>All steps completed - you&apos;re finished</Typography>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={handleReset}>\n                  Reset\n                </Button>\n              </Paper>\n            )}\n          </Stepper>\n        </Grid>\n      </Grid>\n      <Grid item xs={false} sm={2}/>\n    </Grid>\n  );\n}\n\nexport default App;\n","C:\\Users\\andre\\projects\\fees-calc\\src\\index.js",[],"C:\\Users\\andre\\projects\\fees-calc\\src\\BuySellCard.js",[],"C:\\Users\\andre\\projects\\fees-calc\\src\\reportWebVitals.js",[],"C:\\Users\\andre\\projects\\fees-calc\\src\\Header.js",[],{"ruleId":"24","severity":1,"message":"25","line":4,"column":10,"nodeType":"26","messageId":"27","endLine":4,"endColumn":18},"no-unused-vars","'Business' is defined but never used.","Identifier","unusedVar"]